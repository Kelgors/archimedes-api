name: 'Ensure test passes'
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  tests:
    name: Tests with NodeJS v${{ matrix.node }} with ${{ matrix.db.id }}
    runs-on: ubuntu-latest
    env:
      PORT: 3000
      NODE_ENV: test
      JWT_SECRET: b01f741e726e4117
      APP_SECRET: b683f9abb8e7485c
      LOG_TARGET: none
    strategy:
      matrix:
        db:
          - id: postgres
            start: 'sudo systemctl start postgresql.service'
            env:
              DB_TYPE: postgres
              DB_HOST: localhost
              DB_PORT: 5432
              DB_USER: postgres
              DB_NAME: postgres
          - id: mysql
            start: 'sudo systemctl start mysql.service'
            create_db: 'sudo mysql -u root -p=root -e "create database bookmarks"'
            env:
              DB_TYPE: mariadb
              DB_HOST: localhost
              DB_PORT: 3306
              DB_USER: root
              DB_PASS: root
              DB_NAME: bookmarks
          - id: sqlite
            env:
              DB_TYPE: sqlite
              DB_NAME: db/test.db
        node: [20]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        env:
          NODE_ENV: development

      - name: Linting
        run: npm run lint --max-warnings=0
        env:
          NODE_ENV: development

      - name: Build
        run: npm run build
        env:
          NODE_ENV: production

      - name: Start database
        run: ${{ matrix.db.start }}
        if: ${{ matrix.db.start }}

      - name: Create database
        run: ${{ matrix.db.create_db }}
        if: ${{ matrix.db.create_db }}

      - name: Test
        run: npm test
        env: ${{ matrix.db.env }}
